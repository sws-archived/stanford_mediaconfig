<?php
/**
 * @file
 * Includes the FitVids.js jQuery plugin for fluid width video embeds.
 */

// Constants
define("STANFORD_FITVIDS_DEFAULT_REGIONS", '.region');
define("STANFORD_FITVIDS_PLUGIN_URL", 'https://github.com/davatron5000/FitVids.js');
define("STANFORD_FITVIDS_PLUGIN_FILENAME", 'jquery.fitvids.js');

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function stanford_fitvids_help($path, $arg) {
  switch ($path) {
    case "admin/help#stanford_fitvids":
      // TODO: Update the help information to include that this is an altered version of FitVids for Stanford.
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("FitVids is a jQuery plugin for fluid width video embeds.") . '</p>';
      $output .= '<p>' . t("It's useful if you are using a responsive theme (such as Omega), and want the videos to scale.") . '</p>';
      $output .= '<p>' . t("It currently supports Vimeo,YouTube, Blip.tv, Viddler, Kickstarter.") . '</p>';
      $output .= '<h3>' . t('Further info') . '</h3>';
      $output .= '<p>' . t("There is an explanatory blog post at http://daverupert.com/2011/09/responsive-video-embeds-with-fitvids/") . '</p>';
      $output .= '<p>' . t("See the code at https://github.com/davatron5000/FitVids.js/") . '</p>';
      return $output;
      break;
  }
}

/**
 * Implements hook_permission().
 */
function stanford_fitvids_permission() {
  return array(
    'administer stanford_fitvids' => array(
      'title' => t('Administer the FitVids module'),
    )
  );
}

/**
 * Implements hook_menu().
 */
function stanford_fitvids_menu() {
  $items = array();

  $items['admin/config/media/stanford_fitvids'] = array(
    'title' => 'Stanford FitVids',
    'description' => 'Configuration for Stanford FitVids module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_fitvids_form'),
    'access arguments' => array('administer stanford_fitvids'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Configuraton form, called by drupal_get_form()
 * in current_posts_menu().
 */
function stanford_fitvids_form($form, &$form_state) {
  $form['stanford_fitvids_intro'] = array(
    '#markup' => '<p>FitVids is a jQuery plugin for fluid width video embeds. It currently supports Vimeo,YouTube, Blip.tv, Viddler, Kickstarter.</p>',
  );

  $form['stanford_fitvids_selectors'] = array(
    '#type' => 'textarea',
    '#title' => t('Video containers'),
    '#default_value' => variable_get('stanford_fitvids_selectors', STANFORD_FITVIDS_DEFAULT_REGIONS),
    '#rows' => 3,
    '#description' => t('Enter some jQuery selectors for your video containers. Use a new line for each selector.'),
    '#required' => TRUE,
  );

  $form['stanford_fitvids_customselectors'] = array(
    '#type' => 'textarea',
    '#title' => t('Custom iframe URLs'),
    '#default_value' => variable_get('stanford_fitvids_customselectors', ''),
    '#rows' => 3,
    '#description' => t('Only YouTube, Vimeo, Blip.tv, Viddler and Kickstarter are supported by default, but you can tell FitVids about videos from other sites by adding the domain of the player. <br />E.g., "http://www.dailymotion.com". Use a new line for each URL. You don\'t need to add add trailing slashes.'),
  );

  return system_settings_form($form);
}

/**
 * Include the FitVids.js script on every page
 */
function stanford_fitvids_init() {
  // Is the library installed?
  $path = drupal_get_path('module', 'stanford_fitvids') . '/js/jquery.fitvids.js';
  $installed = file_exists($path);
  if (!$installed) {
    return;
  }

  // Add the library reference
  drupal_add_js($path, array(
    'group' => JS_LIBRARY,
    'every_page' => TRUE,
  ));

  // Generate the custom vendor selectors
  $fitvids_customselectors = variable_get('stanford_fitvids_customselectors', '');
  if ($fitvids_customselectors != '') {
    $fitvids_customselectors_array = explode(PHP_EOL, $fitvids_customselectors);
    $custom_selectors = '';
    if (count($fitvids_customselectors_array) > 0) {
      foreach ($fitvids_customselectors_array as $key => $value) {
        $fitvids_customselectors_array[$key] = 'iframe[src^=\'' . trim($value) . '\']';
      }
      $custom_selectors = '{ customSelector: "' . implode(',', $fitvids_customselectors_array) . '" }';
    }
  }
  else {
    $custom_selectors = '';
  }

  // Get fitvids containers
  $fitvids_selectors = variable_get('stanford_fitvids_selectors', FITVIDS_DEFAULT_REGIONS);
  $fitvids_selectors_array = explode(PHP_EOL, $fitvids_selectors);

  // Generate Drupal behaviour js
  $inline_code = '/* Output by FitVids module */' . PHP_EOL;
  $inline_code .= '(function ($) {
    Drupal.behaviors.stanfordFitVids = {
      attach: function (context, settings) {' . PHP_EOL;
      
  // TODO Remove these bits when Media stops adding the wrapper divs
  // Play nice with Media's iframe wrappers, by removing explicit widths and heights
  // For youtube
  $inline_code .= 'if ($(".media-youtube-outer-wrapper").length) {' . PHP_EOL;
  $inline_code .= ' $(".media-youtube-outer-wrapper").removeAttr("style");' . PHP_EOL;
  $inline_code .= ' $(".media-youtube-preview-wrapper").removeAttr("style");' . PHP_EOL;
  $inline_code .= ' $(".media-youtube-outer-wrapper").removeClass("media-youtube-outer-wrapper");' . PHP_EOL;
  $inline_code .= ' $(".media-youtube-preview-wrapper").removeClass("media-youtube-preview-wrapper");' . PHP_EOL;
  $inline_code .= '}' . PHP_EOL;
  // For Vimeo
  $inline_code .= 'if ($(".media-vimeo-outer-wrapper").length) {' . PHP_EOL;
  $inline_code .= ' $(".media-vimeo-outer-wrapper").removeAttr("style");' . PHP_EOL;
  $inline_code .= ' $(".media-vimeo-preview-wrapper").removeAttr("style");' . PHP_EOL;
  $inline_code .= ' $(".media-vimeo-outer-wrapper").removeClass("media-vimeo-outer-wrapper");' . PHP_EOL;
  $inline_code .= ' $(".media-vimeo-preview-wrapper").removeClass("media-vimeo-preview-wrapper");' . PHP_EOL;
  $inline_code .= '}' . PHP_EOL;

  // Write out the fitVids selectors
  foreach ($fitvids_selectors_array as $selector) {
    $selector = trim($selector);
    $inline_code .= '$("' . $selector . '", context).stanfordFitVids(' . $custom_selectors . ');' . PHP_EOL;
  }

  $inline_code .= '}
      };
    }(jQuery));';

  drupal_add_js($inline_code, array(
    'type' => 'inline',
    'scope' => 'footer',
    'weight' => 5,
    'every_page' => TRUE,
  ));
}

/**
 * Implements hook_library().
 */
function fitvids_library() {
  $libraries['stanford_fitvids'] = array(
    'title' => 'FitVids.js',
    'website' => 'https://github.com/davatron5000/FitVids.js',
    'version' => '1.0',
    'js' => array(
      'jquery.stanfordfitvids.js' => array(),
    ),
  );
  return $libraries;
}
